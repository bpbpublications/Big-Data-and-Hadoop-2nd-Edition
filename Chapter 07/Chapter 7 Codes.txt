Implementing user defined functions in Javaimport java.io.IOException;import org.apache.pig.EvalFunc;import org.apache.pig.PigWarning;import org.apache.pig.data.Tuple;public class Pow extends EvalFunc<Long> {    public Long exec(Tuple input) throws IOException {        try {                       int base = (Integer)input.get(0);            int exponent = (Integer)input.get(1);            long result = 1;            /* Probably not the most efficient method...*/            for (int i = 0; i < exponent; i++) {                long preresult = result;                result *= base;                if (preresult > result) {                    // We overflowed.  Give a warning, but do not throw an                    // exception.                    warn("Overflow!", PigWarning.TOO_LARGE_FOR_INT);                    // Returning null will indicate to Pig that we failed but                    // we want to continue execution.                    return null;                }            }            return result;        } catch (Exception e) {            // Throwing an exception will cause the task to fail.            throw new IOException("Something bad happened!", e);        }    }}Distributed Cache with User defined functions in javapublic class Regex extends EvalFunc<Integer> {    static HashMap<String, String> map = new HashMap<String, String>();    public List<String> getCacheFiles() {         Path lookup_file = new Path( "hdfs://localhost.localdomain:8020/user/mayank/next");        List<String> list = new ArrayList<String>(1);        list.add(lookup_file + "#id_lookup");        return list;    }    public void VectorizeData() throws IOException {        FileReader fr = new FileReader("./id_lookup");        BufferedReader brd = new BufferedReader(fr);        String line;        while ((line = brd.readLine()) != null) {            String str[] = line.split("#");            map.put(str[0], str[1]);        }        fr.close();    }    @Override    public Integer exec(Tuple input) throws IOException {        // TODO Auto-generated method stub        return map.size();    }}